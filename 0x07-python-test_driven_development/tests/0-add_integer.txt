The "add_integer" module
=========================

>>> add_integer = __import__("0-add_integer").add_integer
>>> add_integer(1, 2)
3
>>> add_integer(100, -2)
98
>>> add_integer(2)
100
>>> add_integer(100.3, -2)
98
>>> add_integer(-100.3)
-2
>>> add_integer(.9999999999999999999, .99999999)
1
>>> add_integer(.222222222, .99999999)
0
>>> add_integer(.3)
98
>>> add_integer(2, float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer
>>> add_integer(float('inf'), 2)
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer
>>> add_integer(int('inf'))
Traceback (most recent call last):
ValueError: invalid literal for int() with base 10: 'inf'
>>> add_integer(2, int('inf'))
Traceback (most recent call last):
ValueError: invalid literal for int() with base 10: 'inf'
>>> add_integer(4, "School")
Traceback (most recent call last):
TypeError: b must be an integer
>>> add_integer("School", 3)
Traceback (most recent call last):
TypeError: a must be an integer
>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer
>>> add_integer([1,2])
Traceback (most recent call last):
TypeError: a must be an integer
>>> add_integer(2, [2,3])
Traceback (most recent call last):
TypeError: b must be an integer
>>> add_integer()
Traceback (most recent call last):
TypeError: add_integer() missing 1 required positional argument: 'a'
